block var

doctype html

html(lang="en")
	head
		title #{title}
		meta(charset="UTF-8")
		meta(name="viewport", content="width=device-width, initial-scale=1.0, user-scalable=no")
		meta(http-equiv="X-UA-Compatible", content="ie=edge")
		link(rel="stylesheet", href="./css/core.min.css")
		link(rel="stylesheet", href="./css/main.min.css")
	body
		#fb-root
		#loading
			.logo-loader
				img(src="./assets/images/icons/loading.svg", alt="")
			.progstat-wrapper Loading:
				span#progstat 0
				| %
			#progress
		block header
			include _header.pug
		block aside
			include _aside.pug
		main
			block main
			#js-page-verify(class=bodyClass hidden)
		block footer
			include _footer.pug
		script(type="text/javascript", src="./js/core.min.js")
		script(type="text/javascript", src="./js/main.min.js")
		script(type="text/javascript", src="./js/ckeditor.js")
		block scripts
		script.
			ClassicEditor
				.create( document.querySelector( '#editor' ),{
					toolbar: ["undo", "redo", '|', "heading", '|', "bold", "italic", "numberedList", "bulletedList", "blockQuote", '|', "link", "ckfinder", "mediaEmbed", "imageUpload", "imageTextAlternative", "imageStyle:full", "imageStyle:side", '|', "insertTable", "tableColumn", "tableRow", "mergeTableCells"],
					heading: {
						options: [
							{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
							{ model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
							{ model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
							{ model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
							{ model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
							{ model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
							{ model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
						]
					},
					image: {
						toolbar: ["imageStyle:full", "imageStyle:side", "|", "imageTextAlternative"],
						styles: ["full", "side"]
					}
				})
				.then( editor => {
					Array.from( editor.ui.componentFactory.names() );
				})
				.catch( error => {
				});